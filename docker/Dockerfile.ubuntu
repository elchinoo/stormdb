# Ubuntu-based container for DEB package testing
FROM ubuntu:22.04

# Avoid interactive prompts during package installation
ENV DEBIAN_FRONTEND=noninteractive

# Install build dependencies and testing tools
RUN apt-get update && apt-get install -y \
    build-essential \
    git \
    ruby \
    ruby-dev \
    rubygems \
    curl \
    wget \
    dpkg-dev \
    lintian \
    postgresql-client \
    make \
    gzip \
    man-db \
    && rm -rf /var/lib/apt/lists/*

# Install Go 1.22 from official source (detect architecture)
RUN ARCH=$(dpkg --print-architecture) && \
    if [ "$ARCH" = "amd64" ]; then \
        GO_ARCH="amd64"; \
    elif [ "$ARCH" = "arm64" ]; then \
        GO_ARCH="arm64"; \
    else \
        echo "Unsupported architecture: $ARCH" && exit 1; \
    fi && \
    wget https://go.dev/dl/go1.22.10.linux-${GO_ARCH}.tar.gz && \
    tar -C /usr/local -xzf go1.22.10.linux-${GO_ARCH}.tar.gz && \
    rm go1.22.10.linux-${GO_ARCH}.tar.gz

# Add Go to PATH
ENV PATH="/usr/local/go/bin:$PATH"
ENV GOPATH="/root/go"
ENV PATH="$GOPATH/bin:$PATH"

# Install FPM for package building
RUN gem install fpm

# Create working directory
WORKDIR /workspace

# Copy source code
COPY . .

# Set Go module proxy for faster builds
ENV GOPROXY=https://proxy.golang.org,direct

# Build binary and plugins
RUN make clean && make build && make plugins

# Build DEB package
RUN make release-package-deb

# Test package installation
RUN dpkg -i build/packages/*.deb || apt-get update && apt-get install -f -y

# Verify installation
RUN stormdb --help
RUN man stormdb
RUN ls -la /usr/bin/stormdb
RUN ls -la /usr/lib/stormdb/plugins/
RUN ls -la /etc/stormdb/
RUN ls -la /usr/share/man/man1/stormdb.1.gz

# Run package linting
RUN lintian build/packages/*.deb || true

# Create test script
RUN echo '#!/bin/bash' > /test-package.sh && \
    echo 'echo "=== Testing DEB Package ==="' >> /test-package.sh && \
    echo 'echo "Binary installed: $(which stormdb)"' >> /test-package.sh && \
    echo 'echo "Version: $(stormdb --help | head -1)"' >> /test-package.sh && \
    echo 'echo "Plugins available: $(ls /usr/lib/stormdb/plugins/ | wc -l)"' >> /test-package.sh && \
    echo 'echo "Config files: $(ls /etc/stormdb/ | wc -l)"' >> /test-package.sh && \
    echo 'echo "Example configs: $(ls /etc/stormdb/examples/ | wc -l)"' >> /test-package.sh && \
    echo 'echo "Man page available: $(man stormdb | head -1)"' >> /test-package.sh && \
    echo 'echo "=== Package Test Completed ==="' >> /test-package.sh && \
    chmod +x /test-package.sh

# Default command runs the test
CMD ["/test-package.sh"]
