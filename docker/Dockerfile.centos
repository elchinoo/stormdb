# CentOS-based container for RPM package testing
FROM centos:8

# CentOS 8 is EOL, so we need to update the repos
RUN cd /etc/yum.repos.d/ && \
    sed -i 's/mirrorlist/#mirrorlist/g' /etc/yum.repos.d/CentOS-* && \
    sed -i 's|#baseurl=http://mirror.centos.org|baseurl=http://vault.centos.org|g' /etc/yum.repos.d/CentOS-*

# Install build dependencies and testing tools
RUN yum update -y && yum groupinstall -y "Development Tools" && \
    yum install -y \
    git \
    golang \
    ruby \
    ruby-devel \
    rubygems \
    rpm-build \
    rpmlint \
    postgresql \
    make \
    curl \
    gzip \
    man-db \
    && yum clean all

# Install FPM for package building
RUN gem install fpm

# Create working directory
WORKDIR /workspace

# Copy source code
COPY . .

# Set Go module proxy for faster builds
ENV GOPROXY=https://proxy.golang.org,direct

# Build binary and plugins
RUN make clean && make build && make plugins

# Build RPM package
RUN make release-package-rpm

# Test package installation
RUN rpm -i build/packages/*.rpm

# Verify installation
RUN stormdb --help
RUN man stormdb
RUN ls -la /usr/bin/stormdb
RUN ls -la /usr/lib/stormdb/plugins/
RUN ls -la /etc/stormdb/
RUN ls -la /usr/share/man/man1/stormdb.1.gz

# Run package linting
RUN rpmlint build/packages/*.rpm || true

# Create test script
RUN echo '#!/bin/bash' > /test-package.sh && \
    echo 'echo "=== Testing RPM Package ==="' >> /test-package.sh && \
    echo 'echo "Binary installed: $(which stormdb)"' >> /test-package.sh && \
    echo 'echo "Version: $(stormdb --help | head -1)"' >> /test-package.sh && \
    echo 'echo "Plugins available: $(ls /usr/lib/stormdb/plugins/ | wc -l)"' >> /test-package.sh && \
    echo 'echo "Config files: $(ls /etc/stormdb/ | wc -l)"' >> /test-package.sh && \
    echo 'echo "Example configs: $(ls /etc/stormdb/examples/ | wc -l)"' >> /test-package.sh && \
    echo 'echo "Man page available: $(man stormdb | head -1)"' >> /test-package.sh && \
    echo 'echo "=== Package Test Completed ==="' >> /test-package.sh && \
    chmod +x /test-package.sh

# Default command runs the test
CMD ["/test-package.sh"]
