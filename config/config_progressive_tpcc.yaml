# Progressive scaling configuration for TPCC workload
# This configuration demonstrates exponential connection scaling
# for finding optimal TPCC performance configuration

workload: "tpcc"
scale: 5       # Scale factor (number of warehouses)

# Regular benchmark settings (ignored in progressive mode)
duration: "2m"
workers: 20
connections: 20
summary_interval: "15s"

# Database configuration
database:
  type: "postgres"
  host: "localhost"
  port: 5432
  dbname: "test"
  username: "postgres"
  password: "password"
  sslmode: "disable"

# Progressive scaling configuration
progressive:
  enabled: true
  strategy: "exponential"          # linear, exponential, fibonacci
  min_workers: 5                   # Start with 5 workers
  max_workers: 80                  # Scale up to 80 workers
  min_connections: 10              # Start with 10 connections
  max_connections: 100             # Scale up to 100 connections
  test_duration: "20s"             # Run each band for 20 seconds
  warmup_duration: "10s"           # Warmup time per band
  cooldown_duration: "10s"         # Cooldown time between bands
  bands: 5                         # Number of test configurations
  enable_analysis: true            # Enable mathematical analysis

# Enable comprehensive PostgreSQL monitoring for TPCC
collect_pg_stats: true
pg_stats_statements: true
