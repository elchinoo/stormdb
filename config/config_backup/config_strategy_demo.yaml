# Strategy Comparison Demo - Shows difference between strategies
database:
  type: postgres
  host: "localhost"
  port: 5432
  dbname: "test"
  username: "storm_user"
  password: "storm_pwd!123"
  sslmode: "disable"

workload: "simple"
scale: 100
duration: "5s"
workers: 2
connections: 4
summary_interval: "2s"

# Demo: Different scaling strategies
progressive:
  enabled: true
  min_workers: 2
  step_workers: 2
  max_workers: 6
  min_connections: 4
  step_connections: 4
  max_connections: 12
  band_duration: "5s"
  warmup_time: "2s"
  cooldown_time: "1s"
  strategy: "linear"         # Change to "balanced" or "synchronized" to compare
  export_format: "both"
  export_path: "./progressive_results"

plugins:
  auto_load: false
  paths: []
  files: []

# Strategy explanations:
# 
# "linear": Creates all combinations (cartesian product)
#   Result: (2w,4c), (2w,8c), (2w,12c), (4w,4c), (4w,8c), (4w,12c), (6w,4c), (6w,8c), (6w,12c)
#   Total: 9 bands with various worker/connection ratios
#
# "balanced": Proportional scaling of workers and connections
#   Result: (2w,4c), (4w,8c), (6w,12c)  
#   Total: 3 bands with proportional scaling
#
# "synchronized": Workers = Connections (constrained by min/max)
#   Result: (2w,4c), (4w,4c), (6w,6c)
#   Total: 3 bands, connections limited by min_connections=4
