# Real-World E-Commerce Workload Configuration
# This configuration simulates realistic e-commerce database usage patterns
# with complex queries, mixed OLTP/OLAP workloads, and comprehensive indexing

database:
  type: postgres
  host: "localhost"
  port: 5432
  dbname: "test"
  username: "storm_user"
  password: "storm_pwd!123"
  sslmode: "disable"

# Load settings
workload: "ecommerce_basic"     # Real-world e-commerce workload
scale: 1000               # Number of users to generate (also scales other data)
duration: "30s"           # Duration of the test (5 minutes)
workers: 10               # Number of concurrent worker threads
connections: 20           # Max connections in pool

# Workload-specific settings (these will be parsed by the workload itself)
workload_config:
  mode: "mixed"           # Options: read, write, mixed, oltp, analytics
  
  # Data scaling parameters
  data_scale:
    users: 10000          # Number of users to generate
    products: 5000        # Number of products to generate
    orders: 50000         # Number of orders to generate
    reviews: 25000        # Number of reviews to generate
    sessions: 100000      # Number of user sessions to generate
    analytics_events: 500000  # Number of analytics events to generate

  # Workload distribution (percentages should sum to 100)
  workload_mix:
    # Mixed mode distribution
    mixed:
      read_operations: 70
      write_operations: 20
      analytics_operations: 10
    
    # OLTP mode distribution
    oltp:
      oltp_reads: 60      # Fast indexed reads
      oltp_writes: 40     # Transactional writes
      
    # Analytics mode distribution
    analytics:
      complex_queries: 50    # Window functions, CTEs
      aggregations: 30       # Group by, aggregations
      full_table_scans: 20   # Non-indexed queries

  # Query complexity settings
  query_complexity:
    enable_window_functions: true
    enable_ctes: true
    enable_full_text_search: true
    enable_json_queries: false
    max_join_tables: 4
    enable_subqueries: true

  # Performance monitoring
  monitoring:
    enable_query_logging: true
    log_slow_queries: true
    slow_query_threshold: 1000  # milliseconds
    sample_rate: 0.1  # Sample 10% of queries for detailed analysis

  # Realistic data patterns
  data_patterns:
    user_behavior:
      active_user_percentage: 30    # 30% of users are active
      power_user_percentage: 5      # 5% of users generate 50% of activity
      seasonal_variation: true      # Simulate seasonal shopping patterns
    
    product_catalog:
      popular_categories: ["Electronics", "Books", "Clothing"]
      price_distribution: "log_normal"  # Realistic price distribution
      rating_bias: 4.2  # Average rating bias toward positive
    
    order_patterns:
      peak_hours: [9, 12, 18, 20]  # Peak shopping hours
      weekend_multiplier: 1.5      # 50% more weekend activity
      holiday_multiplier: 3.0      # 3x activity during holidays

  # Advanced features
  advanced_features:
    simulate_cache_misses: true    # Randomly query non-cached data
    simulate_contention: true      # Simulate lock contention scenarios
    variable_load: true            # Vary load throughout test duration
    geographic_distribution: true  # Simulate users from different regions

  # Error handling
  error_handling:
    max_retries: 3
    retry_delay: 1000  # milliseconds
    fail_fast: false
    ignore_connection_errors: true
